<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.litbo.hospital.maintenance.dao.ImplementerDictionaryDAO">
  <resultMap id="BaseResultMap" type="com.litbo.hospital.maintenance.pojo.ImplementerDictionary">
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="value" jdbcType="VARCHAR" property="value" />
  </resultMap>
  <insert id="insert" parameterType="com.litbo.hospital.maintenance.pojo.ImplementerDictionary">
    insert into hospital..implementer_dictionary ("type", "value")
    values (#{type,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.litbo.hospital.maintenance.pojo.ImplementerDictionary">
    insert into hospital..implementer_dictionary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        "type",
      </if>
      <if test="value != null">
        "value",
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="selectByName" parameterType="string" resultMap="BaseResultMap">
    select * from hospital..implementer_dictionary where "type" = #{name}
  </select>

  <select id="selectByName1" parameterType="string" resultMap="BaseResultMap">
    select * from hospital..implementer_dictionary where "type" = #{name}
  </select>

  <delete id="deleteByName" parameterType="string">
    delete from hospital..implementer_dictionary where "value" = #{name}
  </delete>

  <select id="findAllType" resultType="string">
    select "value" from hospital..implementer_dictionary where "type" = #{type}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select * from hospital..implementer_dictionary
    <where>
      <if test="type != null">
        "type" like #{type} and
      </if>
      <if test="value != null">
        "value" like #{value} and
      </if>
      1=1
    </where>
  </select>


</mapper>